var binding=function(){function o(e,t,n){e.addEventListener(t,n)}return Object.freeze({enterToSubmit:function(n){o(n,"keydown",function(e){var t;t=n,13===(e=e).which&&(e.repeat||t.closest("form").submit(),e.preventDefault())})},enterToTrigger:function(e,n){o(e,"keydown",function(e){var t;t=n,13===(e=e).which&&(e.repeat||t(),e.preventDefault())})},clickToSubmit:function(t){o(t,"click",function(e){t.closest("form").submit()})},clickToTrigger:function(e,t){o(e,"click",function(e){t(e)})},uploadTrigger:function(e,t){o(e,"change",function(e){t(e)})},dropTrigger:function(t,n){["dragover"].forEach(function(e){o(t,e,function(e){e.preventDefault()})}),o(t,"drop",function(e){n(e)})}})}(),confirm=function(){var n="data-confirm-action";function e(e){var t=dom.createElement(`
            <div id="popup-modal" tabindex="-1" class="fixed top-0 left-0 right-0 z-50 hidden p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full">
                <div class="relative w-full max-w-md max-h-full">
                    <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                        <button type="button" class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="popup-modal">
                            <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                            </svg>
                            <span class="sr-only">Close modal</span>
                        </button>
                        <div class="p-6 text-center">
                            <svg class="mx-auto mb-4 text-gray-400 w-12 h-12 dark:text-gray-200" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
                            </svg>
                            <h3 class="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">Are you sure you want to delete this product?</h3>
                            <button ${n}="confirm" data-modal-hide="popup-modal" type="button" class=" text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2">
                                Yes, I'm sure
                            </button>
                            <button ${n}="cancel" data-modal-hide="popup-modal" type="button" class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">No, cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        `);binding.clickToTrigger(t.querySelector(n+"='confirm'"),e)}return Object.freeze({show:e})}(),dom=function(){function e(e){var t=document.createElement("div");return t.innerHTML+=e,t.firstElementChild}return Object.freeze({createElement:e})}(),fetchRequest=(window.onunhandledrejection=e=>{notification.error(e.reason),console.warn("UNHANDLED PROMISE REJECTION: "+e.reason)},window.onerror=function(e,t,n,o,r){notification.error(e),console.warn("UNHANDLED ERROR: "+r.stack)},function(){function n(e,t){return{success:!0,status:e,data:t}}function o(e){return notification.error("Something Went Wrong!"),{success:!1,error:e}}return Object.freeze({getRequest:async function(e){return fetch(e,{method:"GET"}).then(t=>t.json().then(e=>n(t.status,e))).catch(e=>o(e))},postRequest:async function(e,t){return fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then(t=>t.json().then(e=>n(t.status,e))).catch(e=>o(e))},deleteRequest:async function(e,t){return fetch(e+t,{method:"GET"}).then(e=>e.json()).then(e=>n(response.status,e)).catch(e=>o(e))},putRequest:async function(e,t){return fetch(e,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then(e=>e.json()).then(e=>n(response.status,e)).catch(e=>o(e))}})}()),globalProperties=function(){var n={};function e(e,t){n={...n,[e]:t}}function t(e){if(n.hasOwnProperty(e))return n[e];notification.error(`global property named ${e} can't be found!`)}return{set:e,get:t}}(),loading=Object.freeze({setElement:function(){},unsetElement:function(){},setSVG:function(){},unsetSVG:function(){}}),notification=function(){var o=new Polipop("polipop",{layout:"popups",insert:"before",life:5e3,icons:!1,closer:!1});function n(e,t,n){o.add({content:e,title:t,type:n})}return Object.freeze({error:function(e,t){n(e,t,"error"),console.error("GET STACKTRACK PLEASE")},information:function(e,t){n(e,t,"info"),console.info(e,t)},warning:function(e,t){n(e,t,"warning"),console.warn(e,t)},success:function(e,t){n(e,t,"success"),console.info(e,t)}})}(),storage=function(){function e(e,t){t===Object(t)?window.localStorage.setItem(e,JSON.stringify(t)):window.localStorage.setItem(e,t)}function t(e){return value===Object(value)?(value,JSON.parse(window.localStorage.getItem(e))):(value,window.localStorage.getItem(e))}function n(e){e?window.localStorage.removeItem(e):window.localStorage.clear()}return Object.freeze({set:e,get:t,nuke:n})}(),utility=Object.freeze({shortGUID:function(){return Math.random().toString(36).slice(-6)},stringEllipsis:function(e,t){return e.substring(0,t)+"..."},sizeToReadableString:function(e){var t=0==e?0:Math.floor(Math.log(e)/Math.log(1024));return+(e/Math.pow(1024,t)).toFixed(2)+" "+["B","kB","MB","GB","TB"][t]},wordCount:function(e){return e.trim().split(/\s+/).length}});