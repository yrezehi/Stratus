@using Static.Utilities
﻿@using System.Reflection

@model ITableViewModel<IEntity>

@{
    var entityProperties = ReflectionUtil.GetInterfacedObjectProperties(Model.EntitySignture.GetType());
    var entities = Model.GetEntities().Select(entity => ReflectionUtil.GetPropertyValues<IEntity>(entity));
}

<div class="relative overflow-x-auto">
    <table class="w-full text-sm text-left text-gray-500">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50">
            <tr>
                @foreach (PropertyInfo property in entityProperties)
                {
                    <th scope="col" class="px-6 py-3">
                        @property.Name
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var entity in entities)
            {
                <tr class="bg-white">
                    @foreach (var entityValue in entity)
                    {
                        <td class="px-6 py-4">
                            @entityValue
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>